<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.alva.arbook.dao.SysTextbookTMapper">
    <resultMap id="BaseResultMap" type="com.alva.arbook.entity.SysTextbookT">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <id column="sz_id" jdbcType="VARCHAR" property="szId"/>
        <result column="sz_caption" jdbcType="VARCHAR" property="szCaption"/>
        <result column="sz_cover" jdbcType="VARCHAR" property="szCover"/>
        <result column="sz_edition" jdbcType="VARCHAR" property="szEdition"/>
        <result column="sz_section" jdbcType="VARCHAR" property="szSection"/>
        <result column="sz_grade" jdbcType="VARCHAR" property="szGrade"/>
        <result column="sz_subject_id" jdbcType="VARCHAR" property="szSubjectId"/>
        <result column="sz_pub_id" jdbcType="VARCHAR" property="szPubId"/>
        <result column="sz_insti" jdbcType="VARCHAR" property="szInsti"/>
        <result column="sz_store" jdbcType="VARCHAR" property="szStore"/>
        <result column="sz_md5" jdbcType="VARCHAR" property="szMd5"/>
        <result column="ng_size" jdbcType="BIGINT" property="ngSize"/>
        <result column="sz_tag" jdbcType="VARCHAR" property="szTag"/>
        <result column="ts_created" jdbcType="TIMESTAMP" property="tsCreated"/>
        <result column="ts_updated" jdbcType="TIMESTAMP" property="tsUpdated"/>
        <result column="nt_row_state" jdbcType="INTEGER" property="ntRowState"/>
        <result column="nt_row_version" jdbcType="INTEGER" property="ntRowVersion"/>
        <association property="sysPublishingT" javaType="com.alva.arbook.entity.SysPublishingT">
            <result column="publish_id" jdbcType="VARCHAR" property="szId"/>
            <result column="publish_caption" jdbcType="VARCHAR" property="szCaption"/>
        </association>
        <association property="sysSubjectT" javaType="com.alva.arbook.entity.SysSubjectT">
            <result column="subject_id" jdbcType="VARCHAR" property="szId"/>
            <result column="subject_caption" jdbcType="VARCHAR" property="szCaption"/>
        </association>
    </resultMap>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        delete from sys_textbook_t
        where sz_id = #{szId,jdbcType=VARCHAR}
    </delete>
    <insert id="insert" parameterType="com.alva.arbook.entity.SysTextbookT">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <selectKey keyProperty="szId" order="AFTER" resultType="java.lang.String">
            Postgresql
        </selectKey>
        insert into sys_textbook_t (sz_caption, sz_cover, sz_edition,
        sz_section, sz_grade, sz_subject_id,
        sz_pub_id, sz_insti, sz_store,
        sz_md5, ng_size, sz_tag,
        ts_created, ts_updated, nt_row_state,
        nt_row_version)
        values (#{szCaption,jdbcType=VARCHAR}, #{szCover,jdbcType=VARCHAR}, #{szEdition,jdbcType=VARCHAR},
        #{szSection,jdbcType=VARCHAR}, #{szGrade,jdbcType=VARCHAR}, #{szSubjectId,jdbcType=VARCHAR},
        #{szPubId,jdbcType=VARCHAR}, #{szInsti,jdbcType=VARCHAR}, #{szStore,jdbcType=VARCHAR},
        #{szMd5,jdbcType=VARCHAR}, #{ngSize,jdbcType=BIGINT}, #{szTag,jdbcType=VARCHAR},
        #{tsCreated,jdbcType=TIMESTAMP}, #{tsUpdated,jdbcType=TIMESTAMP}, #{ntRowState,jdbcType=INTEGER},
        #{ntRowVersion,jdbcType=INTEGER})
    </insert>
    <update id="updateByPrimaryKey" parameterType="com.alva.arbook.entity.SysTextbookT">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update sys_textbook_t
        set sz_caption = #{szCaption,jdbcType=VARCHAR},
        sz_cover = #{szCover,jdbcType=VARCHAR},
        sz_edition = #{szEdition,jdbcType=VARCHAR},
        sz_section = #{szSection,jdbcType=VARCHAR},
        sz_grade = #{szGrade,jdbcType=VARCHAR},
        sz_subject_id = #{szSubjectId,jdbcType=VARCHAR},
        sz_pub_id = #{szPubId,jdbcType=VARCHAR},
        sz_insti = #{szInsti,jdbcType=VARCHAR},
        sz_store = #{szStore,jdbcType=VARCHAR},
        sz_md5 = #{szMd5,jdbcType=VARCHAR},
        ng_size = #{ngSize,jdbcType=BIGINT},
        sz_tag = #{szTag,jdbcType=VARCHAR},
        ts_created = #{tsCreated,jdbcType=TIMESTAMP},
        ts_updated = #{tsUpdated,jdbcType=TIMESTAMP},
        nt_row_state = #{ntRowState,jdbcType=INTEGER},
        nt_row_version = #{ntRowVersion,jdbcType=INTEGER}
        where sz_id = #{szId,jdbcType=VARCHAR}
    </update>
    <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select sz_id, sz_caption, sz_cover, sz_edition, sz_section, sz_grade, sz_subject_id,
        sz_pub_id, sz_insti, sz_store, sz_md5, ng_size, sz_tag, ts_created, ts_updated, nt_row_state,
        nt_row_version
        from sys_textbook_t
        where sz_id = #{szId,jdbcType=VARCHAR}
    </select>
    <!--查询所有图书表(单表)的数据并分页-->
    <select id="selectAll" resultMap="BaseResultMap">
        select sz_id, sz_caption, sz_cover, sz_edition, sz_section, sz_grade, sz_subject_id,
        sz_pub_id, sz_insti, sz_store, sz_md5, ng_size, sz_tag, ts_created, ts_updated, nt_row_state,
        nt_row_version
        from sys_textbook_t
        offset #{offset,jdbcType=INTEGER}
        limit #{limit,jdbcType=INTEGER}
    </select>
    <!--根据条件联表查询(三表)并分页-->
    <select id="selectByCustom" resultMap="BaseResultMap">
        select textbook.sz_id, textbook.sz_caption, textbook.sz_cover, textbook.sz_edition, textbook.sz_section,
        textbook.sz_grade, textbook.sz_subject_id, textbook.sz_pub_id,
        textbook.sz_insti, textbook.sz_store, textbook.sz_md5, textbook.ng_size, textbook.sz_tag,
        textbook.ts_created, textbook.ts_updated, textbook.nt_row_state,textbook.nt_row_version,
        subject.sz_id AS subject_id, subject.sz_caption AS subject_caption,
        publish.sz_id AS publish_id, publish.sz_caption AS publish_caption
        from sys_textbook_t textbook
        LEFT JOIN sys_subject_t subject
        ON subject.sz_id = textbook.sz_subject_id
        LEFT JOIN sys_publishing_t publish
        ON publish.sz_id = textbook.sz_pub_id
        <where>
            <if test="subject != null">
                subject.sz_caption=#{subject,jdbcType=VARCHAR}
            </if>
            <if test="publish != null">
                AND publish.sz_caption=#{publish,jdbcType=VARCHAR}
            </if>
            <if test="section != null">
                AND textbook.sz_section=#{section,jdbcType=VARCHAR}
            </if>
            <if test="grade != null">
                AND textbook.sz_grade=#{grade,jdbcType=VARCHAR}
            </if>
        </where>
        offset #{offset,jdbcType=INTEGER}
        limit #{limit,jdbcType=INTEGER}
    </select>
    <!--根据条件查询(三表)到的图书总数-->
    <select id="countByCustomQuery" resultType="Long">
        select count(*) from
        (
        select textbook.sz_id, textbook.sz_caption, textbook.sz_cover, textbook.sz_edition, textbook.sz_section,
        textbook.sz_grade, textbook.sz_subject_id, textbook.sz_pub_id,
        textbook.sz_insti, textbook.sz_store, textbook.sz_md5, textbook.ng_size, textbook.sz_tag,
        textbook.ts_created, textbook.ts_updated, textbook.nt_row_state,textbook.nt_row_version,
        subject.sz_id AS subject_id, subject.sz_caption AS subject_caption,
        publish.sz_id AS publish_id, publish.sz_caption AS publish_caption
        from sys_textbook_t textbook
        LEFT JOIN sys_subject_t subject
        ON subject.sz_id = textbook.sz_subject_id
        LEFT JOIN sys_publishing_t publish
        ON publish.sz_id = textbook.sz_pub_id
        <where>
            <if test="subject != null and subject !='' ">
                subject.sz_caption=#{subject,jdbcType=VARCHAR}
            </if>
            <if test="publish != null and publish !=''">
                AND publish.sz_caption=#{publish,jdbcType=VARCHAR}
            </if>
            <if test="section != null and section !=''">
                AND textbook.sz_section=#{section,jdbcType=VARCHAR}
            </if>
            <if test="grade != null and grade !=''">
                AND textbook.sz_grade=#{grade,jdbcType=VARCHAR}
            </if>
        </where>
        ) AS count_table
    </select>
    <!--查询所有图书数量(单表)-->
    <select id="countAllTextBook" resultType="Long">
        select count(*)
        from sys_textbook_t
    </select>
</mapper>