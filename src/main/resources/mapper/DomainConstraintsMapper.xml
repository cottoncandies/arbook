<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.alva.arbook.dao.DomainConstraintsMapper">
  <resultMap id="BaseResultMap" type="com.alva.arbook.entity.DomainConstraints">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <result column="constraint_catalog" jdbcType="DISTINCT" property="constraintCatalog" />
    <result column="constraint_schema" jdbcType="DISTINCT" property="constraintSchema" />
    <result column="constraint_name" jdbcType="DISTINCT" property="constraintName" />
    <result column="domain_catalog" jdbcType="DISTINCT" property="domainCatalog" />
    <result column="domain_schema" jdbcType="DISTINCT" property="domainSchema" />
    <result column="domain_name" jdbcType="DISTINCT" property="domainName" />
    <result column="is_deferrable" jdbcType="DISTINCT" property="isDeferrable" />
    <result column="initially_deferred" jdbcType="DISTINCT" property="initiallyDeferred" />
  </resultMap>
  <insert id="insert" parameterType="com.alva.arbook.entity.DomainConstraints">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into domain_constraints (`constraint_catalog`, `constraint_schema`, 
      `constraint_name`, domain_catalog, domain_schema, 
      domain_name, is_deferrable, initially_deferred
      )
    values (#{constraintCatalog,jdbcType=DISTINCT}, #{constraintSchema,jdbcType=DISTINCT}, 
      #{constraintName,jdbcType=DISTINCT}, #{domainCatalog,jdbcType=DISTINCT}, #{domainSchema,jdbcType=DISTINCT}, 
      #{domainName,jdbcType=DISTINCT}, #{isDeferrable,jdbcType=DISTINCT}, #{initiallyDeferred,jdbcType=DISTINCT}
      )
  </insert>
  <select id="selectAll" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select `constraint_catalog`, `constraint_schema`, `constraint_name`, domain_catalog, 
    domain_schema, domain_name, is_deferrable, initially_deferred
    from domain_constraints
  </select>
</mapper>